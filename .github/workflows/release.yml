# GitHub Actions Workflow created for handling the release process based on the draft release prepared
# with the Build workflow. Running the publishPlugin task requires the PUBLISH_TOKEN secret provided.

name: Release
on:
  release:
    types: [ published ]

jobs:

  # Prepare and publish the plugin to the Marketplace repository
  release:
    name: Publish Plugin
    runs-on: ubuntu-latest
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.release.tag_name }}

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
          cache: gradle

      # Insert Analytics secrets
      - name: Applying Analytics Secrets
        run: |
          echo "analytics_api_secrets=${{ secrets.ANALYTICS_API_SECRETS }}" > src/main/resources/messages/secrets.properties
          echo "analytics_measurement_id=${{ secrets.ANALYTICS_MEASUREMENT_ID }}" >> src/main/resources/messages/secrets.properties

      # Output changelog from release body
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          CHANGELOG="$(cat << 'EOM' | sed -e 's/^[[:space:]]*$//g' -e '/./,$!d'
          ${{ github.event.release.body }}
          EOM
          )"

          echo "::set-output name=changelog::$CHANGELOG"

      # Update Unreleased section with the current release note
      - name: Patch Changelog
        if: ${{ steps.properties.outputs.changelog != '' }}
        run: |
          ./gradlew patchChangelog --release-note "$(cat << 'EOM'
          ${{ steps.properties.outputs.changelog }}
          EOM
          )"

      # Publish the plugin to the Marketplace
      - name: Publish Plugin
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        run: ./gradlew publishPlugin

  # Patch changelog, commit and push to the current repository
  changelog:
    name: Update Changelog
    needs: release
    runs-on: ubuntu-latest
    steps:

      # Push changelog update
      - name: Push changelog update
        if: ${{ steps.properties.outputs.changelog != '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ github.event.release.tag_name }}"

          git config user.email "action@github.com"
          git config user.name "GitHub Action"


  merge:
    name: ðŸ”€ Merge eap into ${{ matrix.branch }}
    if: github.event.release.target_commitish == 'refs/heads/eap'
    needs: changelog
    strategy:
      matrix:
        branch: [ main, docs, dev ]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      # Check out current repository
      - name: Fetch Sources
        if: matrix.branch != 'main' || !github.event.release.prerelease
        uses: actions/checkout@v2.3.5
        with:
          ref: refs/heads/eap

      - name: Merge eap > ${{ matrix.branch }}
        if: matrix.branch != 'main' || !github.event.release.prerelease
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          source-branch: eap
          target-branch: ${{ matrix.branch }}
          commit-message: "ðŸ”€: Merge branch 'eap' into '${{ matrix.branch }}' [skip ci]"
