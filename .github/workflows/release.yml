# GitHub Actions Workflow created for handling the release process based on the draft release prepared
# with the Build workflow. Running the publishPlugin task requires the PUBLISH_TOKEN secret provided.

name: Release
on:
  release:
    types: [ published ]
jobs:

  # Prepare and publish the plugin to the Marketplace repository
  release:
    name: Publish Plugin
    # run only if eap branch or main branch with stable release
    if: (${{ github.event.release.target_commitish }} == 'main' && !github.event.release.prerelease) || ${{ github.event.release.target_commitish }} == 'eap'
    runs-on: ubuntu-latest
    steps:

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.release.tag_name }}

      # Publish the plugin to the Marketplace
      - name: Publish Plugin
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        run: ./gradlew publishPlugin

  # Patch changelog, commit and push to the current repository
  changelog:
    name: Update Changelog
    needs: release
    runs-on: ubuntu-latest
    steps:

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.release.tag_name }}

      # Update Unreleased section with the current version
      - name: Patch Changelog
        run: ./gradlew patchChangelog

      # Commit patched Changelog
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "📝: updated CHANGELOG.md for ${{ github.event.release.tag_name }} [skip-ci]" -a

      # Push changes
      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          branch: ${{ github.event.release.target_commitish }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge eap > main
        if: ${{ github.event.release.target_commitish }} == 'eap' && !${{ github.event.release.prerelease }}
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          source-branch: eap
          target-branch: main
          commit-message: "🔀: Merge branch 'eap' into 'main' [skip-ci]"

      # Push Merged changes
      - name: Push changes
        if: github.ref == 'refs/heads/eap' && !${{ github.event.release.prerelease }}
        uses: ad-m/github-push-action@v0.6.0
        with:
          branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # Merge stable release's documentation to gh-pages
      - name: Merge eap > gh-pages
        if: ${{ github.event.release.target_commitish }} == 'eap' && !${{ github.event.release.prerelease }}
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          source-branch: eap
          target-branch: gh-pages
          commit-message: "🔀: Merge branch 'eap' into 'gh-pages' [skip-ci]"

      # Push Merged changes
      - name: Push changes
        if: github.ref == 'refs/heads/eap' && !${{ github.event.release.prerelease }}
        uses: ad-m/github-push-action@v0.6.0
        with:
          branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
